events {
  worker_connections 2048;
}

http {
    resolver 127.0.0.11 valid=10s;  # Resolver para usar los servicios de Docker
    upstream backend {
        server tomcat:8080;  # Apunta a las réplicas de Flask
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'upstream_response_time=$upstream_response_time '
                      'upstream_addr=$upstream_addr';  # Añadir información del backend

    access_log /var/log/nginx/access.log main;  # Log de acceso

    server {
        listen 80 default_server;  # Escucha solo en IPv4

        location / {
            proxy_pass http://backend;  # Proxy para balanceo de carga
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}

